import jwt from 'jsonwebtoken';
import { NextRequest, NextResponse } from 'next/server';

const JWT_SECRET = process.env.JWT_SECRET || 'fallback-secret-key-change-in-production';
const JWT_EXPIRES_IN = process.env.JWT_EXPIRES_IN || '7d';

export interface JWTPayload {
  userId: string;
  email: string;
  role: string;
}

/**
 * –°–æ–∑–¥–∞—Ç—å JWT —Ç–æ–∫–µ–Ω
 */
export function createToken(payload: JWTPayload): string {
  return jwt.sign(
    payload,
    JWT_SECRET,
    {
      expiresIn: JWT_EXPIRES_IN,
    } as jwt.SignOptions
  );
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å JWT —Ç–æ–∫–µ–Ω
 */
export function verifyToken(token: string): JWTPayload | null {
  try {
    const decoded = jwt.verify(token, JWT_SECRET) as JWTPayload;
    return decoded;
  } catch (error) {
    console.error('JWT verification failed:', error);
    return null;
  }
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –∏–∑ request (cookie –∏–ª–∏ header)
 */
export function getTokenFromRequest(request: NextRequest): string | null {
  // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º cookie
  const cookieToken = request.cookies.get('token')?.value;
  if (cookieToken) {
    console.log('üç™ Token found in cookie');
    return cookieToken;
  }

  // –ó–∞—Ç–µ–º –ø—Ä–æ–±—É–µ–º Authorization header
  const authHeader = request.headers.get('authorization');
  if (authHeader?.startsWith('Bearer ')) {
    console.log('üîë Token found in Authorization header');
    return authHeader.substring(7);
  }

  console.log('‚ùå No token found in request (checked cookie and header)');
  return null;
}

/**
 * –°–æ–∑–¥–∞—Ç—å response —Å —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π cookie –¥–ª—è —Ç–æ–∫–µ–Ω–∞
 */
export function setTokenCookie(response: NextResponse, token: string): NextResponse {
  const isProduction = process.env.NODE_ENV === 'production';

  // –í–†–ï–ú–ï–ù–ù–û: httpOnly = false –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  // TODO: –≤–µ—Ä–Ω—É—Ç—å httpOnly: true –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç—Ä–æ–∫–æ–≤—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –±–æ–ª—å—à–µ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
  response.cookies.set('token', token, {
    httpOnly: false, // –í–†–ï–ú–ï–ù–ù–û –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    secure: false, // –í–†–ï–ú–ï–ù–ù–û: false –¥–ª—è localhost
    sameSite: 'lax',
    maxAge: 60 * 60 * 24 * 7, // 7 –¥–Ω–µ–π
    path: '/',
    domain: undefined, // –ù–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º domain –¥–ª—è localhost
  });

  console.log('üç™ Cookie set with options:', {
    httpOnly: false, // –í–†–ï–ú–ï–ù–ù–û –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    secure: false, // –í–†–ï–ú–ï–ù–ù–û –¥–ª—è localhost
    sameSite: 'lax',
    maxAge: 60 * 60 * 24 * 7,
    path: '/',
    domain: 'undefined (auto)',
    NODE_ENV: process.env.NODE_ENV,
    tokenPreview: token.substring(0, 20) + '...'
  });

  // –¢–∞–∫–∂–µ –¥–æ–±–∞–≤–∏–º Set-Cookie –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤—Ä—É—á–Ω—É—é –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  const cookieValue = `token=${token}; Path=/; Max-Age=${60 * 60 * 24 * 7}; SameSite=Lax`;
  console.log('üç™ Set-Cookie header:', cookieValue);

  return response;
}

/**
 * –£–¥–∞–ª–∏—Ç—å —Ç–æ–∫–µ–Ω –∏–∑ cookie
 */
export function clearTokenCookie(response: NextResponse): NextResponse {
  response.cookies.delete('token');
  return response;
}
